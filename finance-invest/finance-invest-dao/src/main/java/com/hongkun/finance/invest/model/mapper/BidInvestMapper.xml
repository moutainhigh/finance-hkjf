<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.hongkun.finance.invest.model.BidInvest">

	<!-- POJO类与数据库字段对应关系 -->
	<resultMap id="_BidInvest" type="com.hongkun.finance.invest.model.BidInvest">
		<result property="id" column="id"/>
		<result property="bidInfoId" column="bid_info_id"/>
		<result property="regUserId" column="reg_user_id"/>
		<result property="realName" column="real_name"/>
		<result property="investAmount" column="invest_amount"/>
		<result property="payAmount" column="pay_amount"/>
		<result property="transAmount" column="trans_amount"/>
		<result property="couponIdK" column="coupon_id_k"/>
		<result property="couponIdJ" column="coupon_id_j"/>
		<result property="investSource" column="invest_source"/>
		<result property="transState" column="trans_state"/>
		<result property="matchAmount" column="match_amount"/>
		<result property="matchState" column="match_state"/>
		<result property="investChannel" column="invest_channel"/>
		<result property="investTerm" column="invest_term"/>
		<result property="goodBidId" column="good_bid_id"/>
		<result property="goodInvestTerm" column="good_invest_term"/>
		<result property="goodInvestId" column="good_invest_id"/>
		<result property="ancunNo" column="ancun_no"/>
		<result property="investType" column="invest_type"/>
		<result property="state" column="state"/>
		<result property="actionScope" column="action_scope"/>
		<result property="createTime" column="create_time"/>
		<result property="modifyTime" column="modify_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		<![CDATA[
		id,bid_info_id,reg_user_id,real_name,invest_amount,pay_amount,trans_amount,coupon_id_k,coupon_id_j,invest_source,trans_state,match_amount,match_state,invest_channel,invest_term,good_bid_id,good_invest_term,good_invest_id,ancun_no,invest_type,state,action_scope,create_time,modify_time
		]]>
	</sql>

	<!-- 插入 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO bid_invest ( 
			<if test="id != null">
				id ,
			</if>
			<if test="bidInfoId != null">
				bid_info_id ,
			</if>
			<if test="regUserId != null">
				reg_user_id ,
			</if>
			<if test="realName != null and realName != ''">
				real_name ,
			</if>
			<if test="investAmount != null">
				invest_amount ,
			</if>
			<if test="payAmount != null">
				pay_amount ,
			</if>
			<if test="transAmount != null">
				trans_amount ,
			</if>
			<if test="couponIdK != null">
				coupon_id_k ,
			</if>
			<if test="couponIdJ != null">
				coupon_id_j ,
			</if>
			<if test="investSource != null">
				invest_source ,
			</if>
			<if test="transState != null">
				trans_state ,
			</if>
			<if test="matchAmount != null">
				match_amount ,
			</if>
			<if test="matchState != null">
				match_state ,
			</if>
			<if test="investChannel != null">
				invest_channel ,
			</if>
			<if test="investTerm != null and investTerm != ''">
				invest_term ,
			</if>
			<if test="goodBidId != null">
				good_bid_id ,
			</if>
			<if test="goodInvestTerm != null and goodInvestTerm != ''">
				good_invest_term ,
			</if>
			<if test="goodInvestId != null">
				good_invest_id ,
			</if>
			<if test="ancunNo != null and ancunNo != ''">
				ancun_no ,
			</if>
			<if test="investType != null">
				invest_type ,
			</if>
			<if test="state != null">
				state ,
			</if>
            <if test="actionScope != null">
                action_scope ,
            </if>
				create_time ,
				modify_time 
		) VALUES (
			<if test="id != null">
				#{id} ,
			</if>
			<if test="bidInfoId != null">
				#{bidInfoId} ,
			</if>
			<if test="regUserId != null">
				#{regUserId} ,
			</if>
			<if test="realName != null and realName != ''">
				#{realName} ,
			</if>
			<if test="investAmount != null">
				#{investAmount} ,
			</if>
			<if test="payAmount != null">
				#{payAmount} ,
			</if>
			<if test="transAmount != null">
				#{transAmount} ,
			</if>
			<if test="couponIdK != null">
				#{couponIdK} ,
			</if>
			<if test="couponIdJ != null">
				#{couponIdJ} ,
			</if>
			<if test="investSource != null">
				#{investSource} ,
			</if>
			<if test="transState != null">
				#{transState} ,
			</if>
			<if test="matchAmount != null">
				#{matchAmount} ,
			</if>
			<if test="matchState != null">
				#{matchState} ,
			</if>
			<if test="investChannel != null">
				#{investChannel} ,
			</if>
			<if test="investTerm != null and investTerm != ''">
				#{investTerm} ,
			</if>
			<if test="goodBidId != null">
				#{goodBidId} ,
			</if>
			<if test="goodInvestTerm != null and goodInvestTerm != ''">
				#{goodInvestTerm} ,
			</if>
			<if test="goodInvestId != null">
				#{goodInvestId} ,
			</if>
			<if test="ancunNo != null and ancunNo != ''">
				#{ancunNo} ,
			</if>
			<if test="investType != null">
				#{investType} ,
			</if>
			<if test="state != null">
				#{state} ,
			</if>
            <if test="actionScope != null">
                #{actionScope} ,
            </if>
			<choose>
				<when test="createTime != null">
					#{createTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="modifyTime != null">
					#{modifyTime} 
				</when>
				<otherwise>
					NOW() 
				</otherwise>
			</choose>
		)
	</insert>
	
	<!-- 批量插入 -->
	<insert id="insertBatch" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
		INSERT INTO bid_invest (
        	id ,
        	bid_info_id ,
        	reg_user_id ,
        	real_name ,
        	invest_amount ,
        	pay_amount ,
        	trans_amount ,
        	coupon_id_k ,
        	coupon_id_j ,
        	invest_source ,
        	trans_state ,
        	match_amount ,
        	match_state ,
        	invest_channel ,
        	invest_term ,
        	good_bid_id ,
        	good_invest_term ,
        	good_invest_id ,
        	ancun_no ,
        	invest_type,
        	state ,
            action_scope,
        	create_time ,
        	modify_time 
        ) VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
        (
				<if test="item.id != null">
					#{item.id} ,
				</if>
				<if test="item.id == null">
					DEFAULT ,
				</if>
				<if test="item.bidInfoId != null">
					#{item.bidInfoId} ,
				</if>
				<if test="item.bidInfoId == null">
					DEFAULT ,
				</if>
				<if test="item.regUserId != null">
					#{item.regUserId} ,
				</if>
				<if test="item.regUserId == null">
					DEFAULT ,
				</if>
				<if test="item.realName != null and item.realName != ''">
					#{item.realName} ,
				</if>
				<if test="item.realName == null or item.realName == ''">
					DEFAULT ,
				</if>
				<if test="item.investAmount != null">
					#{item.investAmount} ,
				</if>
				<if test="item.investAmount == null">
					DEFAULT ,
				</if>
				<if test="item.payAmount != null">
					#{item.payAmount} ,
				</if>
				<if test="item.payAmount == null">
					DEFAULT ,
				</if>
				<if test="item.transAmount != null">
					#{item.transAmount} ,
				</if>
				<if test="item.transAmount == null">
					DEFAULT ,
				</if>
				<if test="item.couponIdK != null">
					#{item.couponIdK} ,
				</if>
				<if test="item.couponIdK == null">
					DEFAULT ,
				</if>
				<if test="item.couponIdJ != null">
					#{item.couponIdJ} ,
				</if>
				<if test="item.couponIdJ == null">
					DEFAULT ,
				</if>
				<if test="item.investSource != null">
					#{item.investSource} ,
				</if>
				<if test="item.investSource == null">
					DEFAULT ,
				</if>
				<if test="item.transState != null">
					#{item.transState} ,
				</if>
				<if test="item.transState == null">
					DEFAULT ,
				</if>
				<if test="item.matchAmount != null">
					#{item.matchAmount} ,
				</if>
				<if test="item.matchAmount == null">
					DEFAULT ,
				</if>
				<if test="item.matchState != null">
					#{item.matchState} ,
				</if>
				<if test="item.matchState == null">
					DEFAULT ,
				</if>
				<if test="item.investChannel != null">
					#{item.investChannel} ,
				</if>
				<if test="item.investChannel == null">
					DEFAULT ,
				</if>
				<if test="item.investTerm != null and item.investTerm != ''">
					#{item.investTerm} ,
				</if>
				<if test="item.investTerm == null or item.investTerm == ''">
					DEFAULT ,
				</if>
				<if test="item.goodBidId != null">
					#{item.goodBidId} ,
				</if>
				<if test="item.goodBidId == null">
					DEFAULT ,
				</if>
				<if test="item.goodInvestTerm != null and item.goodInvestTerm != ''">
					#{item.goodInvestTerm} ,
				</if>
				<if test="item.goodInvestTerm == null or item.goodInvestTerm == ''">
					DEFAULT ,
				</if>
				<if test="item.goodInvestId != null">
					#{item.goodInvestId} ,
				</if>
				<if test="item.goodInvestId == null">
					DEFAULT ,
				</if>
				<if test="item.ancunNo != null and item.ancunNo != ''">
					#{item.ancunNo} ,
				</if>
				<if test="item.ancunNo == null or item.ancunNo == ''">
					DEFAULT ,
				</if>
				<if test="item.investType != null">
					#{item.investType} ,
				</if>
				<if test="item.investType == null">
					DEFAULT ,
				</if>
				<if test="item.state != null">
					#{item.state} ,
				</if>
				<if test="item.state == null">
					DEFAULT ,
				</if>
                <if test="item.actionScope != null">
                    #{item.actionScope} ,
                </if>
                <if test="item.actionScope == null">
                    DEFAULT ,
                </if>
			<choose>
				<when test="item.createTime != null">
					#{item.createTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="item.modifyTime != null">
					#{item.modifyTime} 
				</when>
				<otherwise>
					NOW() 
				</otherwise>
			</choose>
        )
        </foreach>
	</insert>
	
	<!-- 更新字段列表 -->
	<sql id="update_sql">
		<set>
			<if test="bidInfoId != null">
			bid_info_id = #{bidInfoId} ,
		   </if>
			<if test="regUserId != null">
			reg_user_id = #{regUserId} ,
		   </if>
			<if test="realName != null and realName != ''">
				real_name = #{realName} ,
			</if>
			<if test="investAmount != null ">
				invest_amount =invest_amount + #{investAmount} ,
			</if>
			<if test="payAmount != null ">
				pay_amount =pay_amount + #{payAmount} ,
			</if>
			<if test="transAmount != null ">
				trans_amount =trans_amount + #{transAmount} ,
			</if>
			<if test="couponIdK != null">
			coupon_id_k = #{couponIdK} ,
		   </if>
			<if test="couponIdJ != null">
			coupon_id_j = #{couponIdJ} ,
		   </if>
			<if test="investSource != null">
			invest_source = #{investSource} ,
		   </if>
			<if test="transState != null">
			trans_state = #{transState} ,
		   </if>
			<if test="matchAmount != null">
			match_amount = #{matchAmount} ,
		   </if>
			<if test="matchState != null">
			match_state = #{matchState} ,
		   </if>
			<if test="investChannel != null">
			invest_channel = #{investChannel} ,
		   </if>
			<if test="investTerm != null and investTerm != ''">
				invest_term = #{investTerm} ,
			</if>
			<if test="goodBidId != null">
			good_bid_id = #{goodBidId} ,
		   </if>
			<if test="goodInvestTerm != null and goodInvestTerm != ''">
				good_invest_term = #{goodInvestTerm} ,
			</if>
			<if test="goodInvestId != null">
				good_invest_id = #{goodInvestId} ,
		   	</if>
			<if test="ancunNo != null and ancunNo != ''">
				ancun_no = #{ancunNo} ,
			</if>
			<if test="investType != null and investType != -999">
				invest_type = #{investType} ,
		    </if>
			<if test="state != null">
				state = #{state} ,
		    </if>
            <if test="actionScope != null">
                action_scope = #{actionScope} ,
            </if>
			<if test="createTime != null">
				create_time = #{createTime} ,
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime} 
			</if>
		</set>
	</sql>
    
	<!-- 更新 -->
	<update id="update">
		UPDATE  bid_invest
		<include refid="update_sql"/>
		WHERE 1=1
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="bidInfoId != null">
				AND bid_info_id = #{bidInfoId}
			</if>
			<if test="ids != null and ids.size != 0">
				AND id IN
				<foreach collection="ids" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
	</update>

	<!-- 删除 -->
	<delete id="delete">
		<![CDATA[
		DELETE FROM bid_invest 
		WHERE
			id = #{id} 
		]]>
	</delete>


	<!-- 删除 -->
	<delete id="delBatchByIds">
		DELETE FROM bid_invest
		WHERE
			id in
			<foreach collection="list" open="(" separator="," close=")" item="val">
				${val}
			</foreach>
	</delete>

    
	<!-- 根据ID查询 -->
	<select id="getById" resultMap="_BidInvest">
		SELECT <include refid="columns" />
		<![CDATA[
		FROM bid_invest 
		WHERE 1 = 1
			AND id = #{id}
		]]>
	</select>
	
	<!-- 查询条件 -->
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	  
			1 = 1    				
			<if test="id != null">
			AND id = #{id}
			</if>
			<if test="bidInfoId != null">
			AND bid_info_id = #{bidInfoId}
			</if>
			<if test="regUserId != null">
			AND reg_user_id = #{regUserId}
			</if>
			<if test="realName != null and realName !=''">
			AND real_name = #{realName}
			</if>
			<if test="investAmount != null">
			AND invest_amount = #{investAmount}
			</if>
			<if test="payAmount != null">
			AND pay_amount = #{payAmount}
			</if>
			<if test="transAmount != null">
			AND trans_amount = #{transAmount}
			</if>
			<if test="couponIdK != null">
			AND coupon_id_k = #{couponIdK}
			</if>
			<if test="couponIdJ != null">
			AND coupon_id_j = #{couponIdJ}
			</if>
			<if test="investSource != null">
			AND invest_source = #{investSource}
			</if>
			<if test="transState != null">
			AND trans_state = #{transState}
			</if>
			<if test="matchAmount != null">
			AND match_amount = #{matchAmount}
			</if>
			<if test="matchState != null">
			AND match_state = #{matchState}
			</if>
			<if test="investChannel != null">
			AND invest_channel = #{investChannel}
			</if>
			<if test="investTerm != null and investTerm !=''">
			AND invest_term = #{investTerm}
			</if>
			<if test="goodBidId != null">
			AND good_bid_id = #{goodBidId}
			</if>
			<if test="goodInvestTerm != null and goodInvestTerm !=''">
			AND good_invest_term = #{goodInvestTerm}
			</if>
			<if test="goodInvestId != null">
			AND good_invest_id = #{goodInvestId}
			</if>
			<if test="ancunNo != null and ancunNo !=''">
			AND ancun_no = #{ancunNo}
			</if>
			<if test="investType != null and investType != -999">
			AND invest_type = #{investType}
			</if>
			<if test="state != null">
			AND state = #{state}
			</if>
            <if test="actionScope != null">
                AND action_scope = #{actionScope}
            </if>
			<if test="stateList != null and stateList.size != 0">
				AND state IN
				<foreach collection="stateList" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
			<if test="createTimeBegin != null">
			AND create_time >= #{createTimeBegin}
			</if>
			<if test="createTimeEnd != null">
			AND create_time &lt;= #{createTimeEnd}
			</if>
			<if test="modifyTimeBegin != null">
			AND modify_time >= #{modifyTimeBegin}
			</if>
			<if test="modifyTimeEnd != null">
			AND modify_time &lt;= #{modifyTimeEnd}
			</if>
			<if test="createTime != null">
			AND create_time = #{createTime}
			</if>
			<if test="modifyTime != null">
			AND modify_time = #{modifyTime}
			</if>
		</where>
	</sql>
		
	<!-- 查询数量 -->
	<select id="findPage_count" resultType="long">
		SELECT COUNT(ID) FROM bid_invest 
		<include refid="findPage_where"/>    
	</select>
    
	<!-- 查询分页 -->
	<select id="findPage" resultMap="_BidInvest">
		SELECT <include refid="columns" />
		FROM bid_invest 
		<include refid="findPage_where"/>
		<if test="sortColumns != null and sortColumns !=''">
		ORDER BY ${sortColumns}
		</if>
	</select>

	<!-- 分页查询投资记录详情 -->
	<select id="findBidInvestDetailList" resultType="com.hongkun.finance.invest.model.vo.BidInvestDetailVO">
		SELECT
			b1.id AS bidInvestId,
			b1.reg_user_id AS regUserId,
			b1.real_name AS realName,
			b1.invest_amount AS investAmount,
			b1.state AS bidInvestState,
			b1.create_time AS createTime,
			b1.trans_state AS transState,
            b1.coupon_id_j AS couponIncreaseId,
			b1.trans_amount AS transAmount,
            b1.invest_type AS  investType,
			b2.id AS bidInfoId,
			b2.`name` AS bidName,
			b2.term_value AS termValue,
			b2.term_unit AS termUnit,
			b2.interest_rate AS interestRate,
			b2.state AS bidState,
			b2.total_amount AS totalAmount,
            b2.lending_time AS lendingTime,
			b2.residue_amount AS residueAmount,
            b2.bidd_repayment_way AS biddRepaymentWay,
			b3.id AS bidProductId,
            b3.action_scope AS actionScope,
			b3.type AS bidProductType
		FROM
			bid_invest AS b1
		INNER JOIN bid_info AS b2 ON b1.bid_info_id = b2.id
		INNER JOIN bid_product AS b3 ON b2.bid_product_id = b3.id
		<include refid="findBidInvestDetailList_where"/>
		<if test="sortColumns != null and sortColumns !=''">
			ORDER BY ${sortColumns}
		</if>
	</select>
	
	<!-- 查询投资记录详情总记录 -->
	<select id="findBidInvestDetailListCount" resultType="long">
		SELECT COUNT(b1.id)
		FROM
			bid_invest AS b1
		INNER JOIN bid_info AS b2 ON b1.bid_info_id = b2.id
		INNER JOIN bid_product AS b3 ON b2.bid_product_id = b3.id
		<include refid="findBidInvestDetailList_where"/>
	</select>
	
	<sql id="findBidInvestDetailList_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	  
			1 = 1 
			<if test="investMin != null">
				AND b1.invest_amount >= #{investMin}
			</if>
			<if test="investMax != null">
				AND b1.invest_amount &lt;= #{investMax}
			</if>
			<if test="bidInfoId != null">
				AND b1.bid_info_id = #{bidInfoId}
			</if>
			<if test="regUserId != null">
				AND b1.reg_user_id = #{regUserId}
			</if>
			<if test="investType != null and investType != -999">
				AND b1.invest_type = #{investType}
			</if>
            <if test="investChannel != null">
                AND b1.invest_channel = #{investChannel}
            </if>
			<if test="realName != null">
				AND b1.real_name like  CONCAT('%',#{realName},'%') 
			</if>
			<if test="bidProductType != null and bidProductType != -999">
				AND b3.type = #{bidProductType}
			</if>
			<if test="bidState != null and bidState != -999">
				AND b2.state = #{bidState}
			</if>
			<if test="bidInvestState != null and bidInvestState != -999">
				AND b1.state = #{bidInvestState}
			</if>
            <if test="actionScope != null and actionScope != -999">
                AND b3.action_scope = #{actionScope}
            </if>
            <if test="actionScope != null and actionScope != -999">
                AND b3.action_scope = #{actionScope}
            </if>
			<if test="createTimeBegin != null and createTimeBegin != ''">
				AND b1.create_time >= #{createTimeBegin}
			</if>
			<if test="createTimeEnd != null and createTimeEnd != ''">
				AND b1.create_time &lt;= #{createTimeEnd}
			</if>
			<if test="bidInfoIds != null and bidInfoIds.size != 0">
				AND bid_info_id IN
				<foreach collection="bidInfoIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
			<if test="bidProductTypes != null and bidProductTypes.size != 0">
				AND b3.type IN
				<foreach collection="bidProductTypes" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
			<if test="bidStates != null and bidStates.size != 0">
				AND b2.state IN
				<foreach collection="bidStates" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
            <if test="bidInvestStates != null and bidInvestStates.size != 0">
                AND b1.state IN
                <foreach collection="bidInvestStates" open="(" separator="," close=")" item="val">
                    ${val}
                </foreach>
            </if>
            <if test="regUserIdList != null and regUserIdList.size != 0">
                AND b1.reg_user_id IN
                <foreach collection="regUserIdList" open="(" separator="," close=")" item="userId">
                    ${userId}
                </foreach>
            </if>
           and b1.invest_amount - b1.trans_amount > 0
		</where>
	</sql>

    <!-- 查询标的不同投资渠道的投资总金额 -->
    <select id="findSumAmountByBidId" resultType="java.util.Map">
        SELECT
            sum(case WHEN invest_channel = 1 THEN invest_amount else 0 END) AS investAmountChannel1,
            sum(case WHEN invest_channel = 2 THEN invest_amount else 0 END) AS investAmountChannel2,
            sum(case WHEN invest_channel = 3 THEN invest_amount else 0 END) AS investAmountChannel3,
            sum(case WHEN invest_channel = 1 THEN trans_amount else 0 END) AS investTransAmount1,
            sum(case WHEN invest_channel = 2 THEN trans_amount else 0 END) AS investTransAmount2,
            sum(case WHEN invest_channel = 3 THEN trans_amount else 0 END) AS investTransAmount3
        FROM
          bid_invest
        WHERE
          bid_info_id = #{bidInfoId} AND state = 1
    </select>
		<!-- 根据产品类型，标的状态查询 投资有效总-->
	<select id="findInvestSumAmount" resultType="java.math.BigDecimal" parameterType="java.util.Map">
		select ifnull(sum(invest_amount), 0) from bid_invest invest left join bid_info info on 
			invest.bid_info_id = info.id left join bid_product p on info.bid_product_id = p.id 
				where invest.state = 1 and invest.reg_user_id=#{regUserId} and p.type=#{productType} and info.state=#{bidState} 
	</select>
	<!-- 根据产品类型，标的状态查询 投资有效记录-->
	<select id="findInvests" resultMap="_BidInvest" parameterType="java.util.Map">
		select 
			invest.id,
			invest.bid_info_id,
			invest.reg_user_id,
			invest.real_name,
			invest.invest_amount,
			invest.pay_amount,
			invest.trans_amount,
			invest.coupon_id_k,
			invest.coupon_id_j,
			invest.invest_source,
			invest.trans_state,
			invest.match_amount,
			invest.match_state,
			invest.invest_channel,
			invest.invest_term,
			invest.good_bid_id,
			invest.good_invest_term,
			invest.good_invest_id,
			invest.ancun_no,
			invest.state,
            invest.action_scope,
			invest.create_time,
			invest.modify_time
		from bid_invest invest left join bid_info info on 
			invest.bid_info_id = info.id left join bid_product p on info.bid_product_id = p.id 
				where invest.state = 1 
			<if test="productType != null and productType != -999">
				and p.type=#{productType}
			</if>
            <if test="actionScope != null">
                and p.action_scope=#{actionScope}
            </if>
			<if test="bidState != null">
				and info.state=#{bidState}
			</if>
			<if test="regUserId != null">
				AND invest.reg_user_id = #{regUserId}
			</if>
		order by invest.id asc
	</select>
	
	
	<select id="findMatchBidInvestList" resultType="com.hongkun.finance.invest.model.vo.BidInvestDetailVO">
		SELECT  b1.id,
			    b1.id AS bidInvestId,
				b1.reg_user_id AS regUserId,
				b1.real_name AS realName,
				b1.invest_amount AS investAmount,
				b1.state AS bidInvestState,
				b1.create_time AS createTime,
				b1.good_invest_term as goodInvestTerm,
				b1.invest_term as investTerm,
				b1.action_scope as actionScope,
				b2.id AS bidInfoId,
				b2.`name` AS bidName,
				b2.total_amount AS totalAmount,
				b2.residue_amount AS residueAmount,
				b3.id AS as goodBidId,
				b3.`name` AS goodBidName
		FROM
			bid_invest b1
		INNER JOIN bid_info b2 ON b1.bid_info_id = b2.id
		INNER JOIN bid_info b3 ON b1.good_bid_id = b3.id
	</select>
	<!-- 查询匹配投资记录详情总记录 -->
	<select id="findMatchBidInvestListCount" resultType="long">
		SELECT COUNT(b1.id)
		FROM
			bid_invest b1
		LEFT JOIN bid_info b2 ON b1.bid_info_id = b2.id
		<include refid="findMatchBidInvestList_where"/>
	</select>
	
	<sql id="findMatchBidInvestList_where">
		<where>	  
			1 = 1    				
			<if test="goodBidId != null and goodBidId != '' ">
				AND b1.good_bid_id = #{goodBidId}
			</if>
			<if test="bidInfoId != null and bidInfoId != '' ">
				AND b1.bid_info_id = #{bidInfoId}
			</if>
		</where>
	</sql>
	<!-- 查询个人的投资数量-->
	<select id="findBidInvestCount" resultType="java.lang.Integer">
		SELECT COUNT(b1.id)
		FROM
			bid_invest b1
		INNER JOIN bid_info AS b ON b1.bid_info_id = b.id
		INNER JOIN bid_info_detail b2 ON b.id = b2.bidd_info_id
		INNER JOIN bid_product AS c ON b.bid_product_id = c.id
		<where>	  
			1 = 1    and b1.state =1 and b1.invest_type=1 	and b.state IN (2, 3, 4, 5, 6)
		AND c.type NOT IN (5, 7)
			<if test="regUserId != null and regUserId != '' ">
				AND b1.reg_user_id = #{regUserId}
			</if>				
			<if test="bidId != null and bidId != '' ">
				AND b1.bid_info_id = #{bidId}
			</if>
			<if test="createTime != null">
			   AND date(b1.create_time) >= #{createTime}#
			</if>
			 <if test="endTime != null ">
			   AND b1.create_time &lt;= #{endTime}#
			</if>
			<if test="recommendState != null and recommendState != '' ">
			   AND b2.recommend_state = #{recommendState}#
			</if>
			<if test="bidType != null and bidType != '' ">
			   AND c.type = #{bidType}#
			</if>
		</where>
	</select>
	<!-- 查询活期标的投资记录 -->
	<select id="findInvestRecord" resultMap="_BidInvest">
		SELECT <include refid="columns" />
		FROM bid_invest 
		<where>	  
			1 = 1    				
			<if test="bidInfoId != null">
			AND bid_info_id = #{bidInfoId}
			</if>
			<if test="state != null">
				AND state in 
				 <foreach collection="state" open="(" separator="," close=")" item="investstate">
                   #{investstate}
               </foreach>
		    </if>
		</where>
		ORDER BY id asc limit 1
	</select>
	
	<select id="findSumInvestAmountByUserId" resultType="java.math.BigDecimal">
		SELECT sum(invest_amount)
		FROM bid_invest 
		where invest_channel = 1 AND state in(1,2,3) 
			AND reg_user_id = #{regUserId}
	</select>
	
	<select id="findBidInvestByRegUserIds" resultType="com.hongkun.finance.invest.model.vo.BidInvestForRecommendVo">
		SELECT b1.reg_user_id as regUserId,
			   ifnull(b1.invest_amount,0) as investAmount,
			   b1.create_time as investTime,
			   b2.term_unit as termUnit,
			   b2.term_value as termValue,
			   b2.name as bidName 
		FROM bid_invest b1 inner join bid_info b2 on b1.bid_info_id = b2.id
		inner join bid_product b3 on b2.bid_product_id = b3.id 
		where b1.invest_channel = 1 AND b1.state in(1,2,3) and b3.type in (0,1,2,3,4)
			AND b1.reg_user_id in
			<foreach collection="list" open="(" separator="," close=")" item="val">
                    ${val}
            </foreach>
            order by b1.create_time desc,b1.reg_user_id
	</select>
	
	<!-- 用户新手标查询结果 -->
	<select id="findBidInvestCountForPrefered" parameterType="java.lang.Integer" resultType="long">
		SELECT
			count(1)
		FROM
			bid_invest AS a
		INNER JOIN bid_info AS b ON a.bid_info_id = b.id
		INNER JOIN bid_product AS c ON b.bid_product_id = c.id
		WHERE
			b.state IN (2, 3, 4, 5, 6)
		AND c.type NOT IN (5, 7)
		AND a.reg_user_id = #{regUserId}
	</select>
	
	<!-- 查新已投资用户 -->
	<select id="findBidInvestPreferedList" resultType="java.lang.Integer">
		SELECT
			a.reg_user_id
		FROM
			bid_invest AS a
		INNER JOIN bid_info AS b ON a.bid_info_id = b.id
		INNER JOIN bid_product AS c ON b.bid_product_id = c.id
		WHERE
			b.state IN (2, 3, 4, 5, 6)
		GROUP BY a.reg_user_id
	</select>
	
	<select id="findBidInvestListByIds" resultType="com.hongkun.finance.invest.model.vo.BidInvestVoForApp">
		SELECT 
			b1.invest_amount as money,
			b1.create_time as investTime,
			b1.action_scope as actionScope,
			b2.term_unit as termUnit,
			b2.term_value as termValue ,
			b2.interest_rate as rate 
		FROM bid_invest b1 inner join bid_info b2 on b1.bid_info_id = b2.id
		where b1.state in(1,2,3,4) 
			AND b1.id in
			<foreach collection="list" open="(" separator="," close=")" item="val">
                    ${val}
            </foreach>
            order by  b1.id desc
	</select>
	
	
	<select id="friendInvestListForSalesCount" resultType="java.lang.Long">
		SELECT count(0)
		FROM bid_invest b1 inner join bid_info b2 on b1.bid_info_id = b2.id 
			inner join bid_product b3 on b2.bid_product_id = b3.id 
		where 1=1
			<if test="bidState == 0 ">
				AND b1.state in (2,3,4,5)
			</if>
			<if test="bidState == 1 ">
				AND b1.state = 2
			</if>
			<if test="bidState == 2 ">
				AND b1.state in  (3,4)
			</if>
			<if test="bidState == 3 ">
				AND b1.state = 5
			</if>
			AND b1.reg_user_id = #{regUserId} 
			AND b3.type not in (5,7)
            order by  b1.id  desc
	</select>
	
	<select id="friendInvestListForSales" resultType="com.hongkun.finance.invest.model.vo.BidInvestVoForSales">
		SELECT
			b1.id as investId,
			b1.reg_user_id as regUserId,
			b1.invest_amount as investAmount,
			b1.create_time as investTime,
			b2.name as bidName,
			b2.interest_rate as rate,
			b2.state as bidState,
			b2.term_unit as termUnit,
			b2.term_value as termValue
		FROM bid_invest b1 inner join bid_info b2 on b1.bid_info_id = b2.id 
			inner join bid_product b3 on b2.bid_product_id = b3.id 
		where  1=1
			<if test="bidState == 0 ">
				AND b2.state in (2,3,4,5)
			</if>
			<if test="bidState == 1 ">
				AND b2.state = 2
			</if>
			<if test="bidState == 2 ">
				AND b2.state in  (3,4)
			</if>
			<if test="bidState == 3 ">
				AND b2.state = 5
			</if>
			AND b1.reg_user_id = #{regUserId}
			AND b3.type not in (5,7)
            order by  b1.id  desc
	</select>
	<!--获取优选标对应可匹配的投资记录集合-->
	<select id="findToBeMatchedBidInvestList" parameterType="java.lang.Integer" resultMap="_BidInvest">
		SELECT <include refid="columns" />
			FROM bid_invest
		WHERE bid_info_id = #{goodBidId}
			AND state in (1,4,5)
			AND match_state IN (0,2)
			AND invest_channel = 1
			ORDER BY create_time DESC
	</select>

	<select id="findBidInvestListByIdList" resultMap="_BidInvest">
		SELECT <include refid="columns" />
			FROM bid_invest
		where id in
		<foreach collection="list" open="(" separator="," close=")" item="val">
			${val}
		</foreach>
	</select>

	<select id="findGoodBidInvestListByIdList" resultMap="_BidInvest">
		SELECT <include refid="columns" />
		FROM bid_invest
		where id in
		(select  good_invest_id  from  bid_invest
			where id in
			<foreach collection="collection" open="(" separator="," close=")" item="val">
				${val}
			</foreach>
		)
	</select>

	<!-- 近三个月有投资记录的用户 -->
	<select id="findUserThreeMonthInvest" resultType="java.lang.Integer">
		SELECT DISTINCT
			reg_user_id
		FROM
			bid_invest
		WHERE
			reg_user_id IN
			<foreach collection="collection" open="(" separator="," close=")" item="uid">
				${uid}
			</foreach>
			AND create_time > DATE_ADD(NOW(), INTERVAL - 3 MONTH)
			AND state = 1
	</select>

	<!-- 获取优选标对应已放款的散标投资记录集合 -->
	<select id="findGoodInvestMatchCommonInvestList" resultMap="_BidInvest">
		SELECT
			a.id,
			a.good_invest_term
		FROM
			bid_invest a
		LEFT JOIN bid_info b ON a.bid_info_id = b.id
		WHERE
			a.good_invest_id = #{goodInvestId}
		AND a.good_bid_id = #{goodBidId}
		AND a.reg_user_id = #{regUserId}
		AND a.state = 1
		AND b.state = 5
	</select>
	
	<!-- 查询标的ID集合-->
	<select id="findBidInfoIdByCondition" resultType="java.lang.Integer">
		SELECT b1.bid_info_id
		FROM
			bid_invest b1
		INNER JOIN bid_info AS b ON b1.bid_info_id = b.id
		INNER JOIN bid_info_detail b2 ON b.id = b2.bidd_info_id
		INNER JOIN bid_product AS c ON b.bid_product_id = c.id
		<where>	  
			1 = 1    and b1.state =1 and b1.invest_type=1 	and b.state IN (2, 3, 4, 5, 6)
		AND c.type NOT IN (5, 7)
			<if test="regUserId != null and regUserId != '' ">
				AND b1.reg_user_id = #{regUserId}
			</if>				
			<if test="bidInfoId != null and bidInfoId != '' ">
				AND b1.bid_info_id = #{bidInfoId}
			</if>
			<if test="createTimeBegin != null">
			   AND date(b1.create_time) >= #{createTimeBegin}#
			</if>
			 <if test="createTimeEnd != null ">
			   AND b1.create_time &lt;= #{createTimeEnd}#
			</if>
		</where>
		GROUP BY b1.bid_info_id
	</select>

    <!-- 查询数量 -->
    <select id="findStaFunInvestCount" resultType="long">
        SELECT
          count(b1.id)
        FROM
          bid_invest AS b1
          INNER JOIN bid_info AS b2 ON b1.bid_info_id = b2.id
          INNER JOIN bid_product AS b3 ON b2.bid_product_id = b3.id
        <include refid="findStaFunInvst_where"/>
    </select>

    <!-- 查询客户投资统计 -->
    <select id="findStaFunInvest" resultType="com.hongkun.finance.invest.model.vo.StaFunInvestVO">
        SELECT
            b1.id,
            b1.reg_user_id AS regUserId,
            b1.real_name AS realName,
            b1.create_time AS createTime,
            b1.bid_info_id AS bidInfoId,
            b1.invest_amount AS investAmount,
            b2.term_unit AS termUnit,
            b2.term_value AS termValue,
            b2.interest_rate AS rate,
            b2.name AS bidName,
            b3.type AS productType,
            (
            SELECT
              COUNT(id)
            FROM
              bid_invest
            WHERE
              bid_info_id = b1.bid_info_id
              AND id &lt;= b1.id
              AND reg_user_id = b1.reg_user_id
            ) AS times
        FROM
        bid_invest AS b1
        INNER JOIN bid_info AS b2 ON b1.bid_info_id = b2.id
        INNER JOIN bid_product AS b3 ON b2.bid_product_id = b3.id
        <include refid="findStaFunInvst_where"/>
    </select>

    <sql id="findStaFunInvst_where">
        <where>
            1=1
            <if test="startTime != null">
                AND b1.create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                AND b1.create_time &lt; #{endTime}
            </if>
            <if test="userIds != null and userIds.size != 0">
                AND b1.reg_user_id IN
                <foreach collection="userIds" open="(" separator="," close=")" item="val">
                    ${val}
                </foreach>
            </if>
        </where>
    </sql>

    <!-- 查询标的投资金额&投资人数 -->
    <select id="findStaFunInvestAddup" resultType="java.util.Map">
        SELECT
          IFNULL(SUM(b1.invest_amount - b1.trans_amount),0) AS investAmount,
          IFNULL(COUNT(b1.id),0)AS investTimes,
          IFNULL(count(DISTINCT b1.reg_user_id),0) AS investUserCount
        FROM
          bid_invest AS b1
          INNER JOIN bid_info AS b2 ON b1.bid_info_id = b2.id
          INNER JOIN bid_info_detail AS b3 ON b2.id = b3.bidd_info_id
          INNER JOIN bid_product AS b4 ON b2.bid_product_id = b4.id
        WHERE
          b3.match_type = 0
          AND b2.state not in (8,9)
          AND b4.type NOT IN (5, 7)
        <if test="startTime != null">
            AND b1.create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND b1.create_time &lt; #{endTime}
        </if>
          
    </select>

	<!-- 查询用户和用户邀请人是否有投资记录 -->
	<select id="getSelfAndInvitorInvestCount" parameterType="java.util.List" resultType="java.lang.Integer">
		SELECT
		COUNT(0)
		FROM
		bid_invest invest
		LEFT JOIN bid_info info ON invest.bid_info_id = info.id
		LEFT JOIN bid_product product ON info.bid_product_id = product.id
		WHERE
		invest.reg_user_id IN
		<foreach collection="list" open="(" separator="," close=")" item="val">
			${val}
		</foreach>
	</select>

	<!-- 查询用户和用户邀请人是否有钱袋子转入记录 -->
	<select id="getSelfAndInvitorTransferCount" parameterType="java.util.List" resultType="java.lang.Integer">
		SELECT
		COUNT(0)
		FROM
		qdz_trans_record
		WHERE
		type = 1
		AND reg_user_id IN
		<foreach collection="list" open="(" separator="," close=")" item="val">
			${val}
		</foreach>
	</select>

	<!-- 根据条件获取标地所有投资记录集合,默认条件(investAmount-transAmount > 0)的记录集合 -->
	<select id="findBidInvestListByCondition" resultMap="_BidInvest">
		SELECT <include refid="columns" />
		FROM bid_invest
		<include refid="findPage_where"/>
		and (invest_amount - trans_amount) > 0
	</select>
</mapper>
