<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.hongkun.finance.loan.model.BidReceiptPlan">

	<!-- POJO类与数据库字段对应关系 -->
	<resultMap id="_BidReceiptPlan" type="com.hongkun.finance.loan.model.BidReceiptPlan">
		<result property="id" column="id"/>
		<result property="investId" column="invest_id"/>
		<result property="bidId" column="bid_id"/>
		<result property="periods" column="periods"/>
		<result property="amount" column="amount"/>
		<result property="capitalAmount" column="capital_amount"/>
		<result property="interestAmount" column="interest_amount"/>
		<result property="increaseAmount" column="increase_amount"/>
		<result property="yearrateDifferenceMoney" column="yearrate_difference_money"/>
		<result property="punishAmount" column="punish_amount"/>
		<result property="planTime" column="plan_time"/>
		<result property="actualTime" column="actual_time"/>
		<result property="regUserId" column="reg_user_id"/>
		<result property="state" column="state"/>
		<result property="createTime" column="create_time"/>
		<result property="modifyTime" column="modify_time"/>
		<result property="action_scope" column="actionScope"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		<![CDATA[
		id,invest_id,bid_id,periods,amount,capital_amount,interest_amount,increase_amount,yearrate_difference_money,punish_amount,plan_time,actual_time,reg_user_id,state,create_time,modify_time,action_scope
		]]>
	</sql>

	<!-- 插入 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO bid_receipt_plan ( 
			<if test="id != null">
				id ,
			</if>
			<if test="investId != null">
				invest_id ,
			</if>
			<if test="bidId != null">
				bid_id ,
			</if>
			<if test="periods != null">
				periods ,
			</if>
			<if test="amount != null">
				amount ,
			</if>
			<if test="capitalAmount != null">
				capital_amount ,
			</if>
			<if test="interestAmount != null">
				interest_amount ,
			</if>
			<if test="increaseAmount != null">
				increase_amount ,
			</if>
			<if test="yearrateDifferenceMoney != null">
				yearrate_difference_money ,
			</if>
			<if test="punishAmount != null">
				punish_amount ,
			</if>
				plan_time ,
				actual_time ,
			<if test="regUserId != null">
				reg_user_id ,
			</if>
			<if test="state != null">
				state ,
			</if>
			<if test="actionScope != null">
				action_scope ,
			</if>
				create_time ,
				modify_time 
		) VALUES (
			<if test="id != null">
				#{id} ,
			</if>
			<if test="investId != null">
				#{investId} ,
			</if>
			<if test="bidId != null">
				#{bidId} ,
			</if>
			<if test="periods != null">
				#{periods} ,
			</if>
			<if test="amount != null">
				#{amount} ,
			</if>
			<if test="capitalAmount != null">
				#{capitalAmount} ,
			</if>
			<if test="interestAmount != null">
				#{interestAmount} ,
			</if>
			<if test="increaseAmount != null">
				#{increaseAmount} ,
			</if>
			<if test="yearrateDifferenceMoney != null">
				#{yearrateDifferenceMoney} ,
			</if>
			<if test="punishAmount != null">
				#{punishAmount} ,
			</if>
			<choose>
				<when test="planTime != null">
					#{planTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="actualTime != null">
					#{actualTime} ,
				</when>
				<otherwise>
					DEFAULT ,
				</otherwise>
			</choose>
			<if test="regUserId != null">
				#{regUserId} ,
			</if>
			<if test="state != null">
				#{state} ,
			</if>
			<choose>
				<when test="actionScope != null">
					#{actionScope} ,
				</when>
				<otherwise>
					DEFAULT ,
				</otherwise>
			</choose>
			<choose>
				<when test="createTime != null">
					#{createTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="modifyTime != null">
					#{modifyTime} 
				</when>
				<otherwise>
					NOW() 
				</otherwise>
			</choose>
		)
	</insert>
	
	<!-- 批量插入 -->
	<insert id="insertBatch" useGeneratedKeys="true" parameterType="java.util.List">
		INSERT INTO bid_receipt_plan (
        	id ,
        	invest_id ,
        	bid_id ,
        	periods ,
        	amount ,
        	capital_amount ,
        	interest_amount ,
        	increase_amount ,
        	yearrate_difference_money ,
        	punish_amount ,
        	plan_time ,
        	actual_time ,
        	reg_user_id ,
        	state ,
		action_scope,
        	create_time ,
        	modify_time 
        ) VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
        (
				<if test="item.id != null">
					#{item.id} ,
				</if>
				<if test="item.id == null">
					DEFAULT ,
				</if>
				<if test="item.investId != null">
					#{item.investId} ,
				</if>
				<if test="item.investId == null">
					DEFAULT ,
				</if>
				<if test="item.bidId != null">
					#{item.bidId} ,
				</if>
				<if test="item.bidId == null">
					DEFAULT ,
				</if>
				<if test="item.periods != null">
					#{item.periods} ,
				</if>
				<if test="item.periods == null">
					DEFAULT ,
				</if>
				<if test="item.amount != null">
					#{item.amount} ,
				</if>
				<if test="item.amount == null">
					DEFAULT ,
				</if>
				<if test="item.capitalAmount != null">
					#{item.capitalAmount} ,
				</if>
				<if test="item.capitalAmount == null">
					DEFAULT ,
				</if>
				<if test="item.interestAmount != null">
					#{item.interestAmount} ,
				</if>
				<if test="item.interestAmount == null">
					DEFAULT ,
				</if>
				<if test="item.increaseAmount != null">
					#{item.increaseAmount} ,
				</if>
				<if test="item.increaseAmount == null">
					DEFAULT ,
				</if>
				<if test="item.yearrateDifferenceMoney != null">
					#{item.yearrateDifferenceMoney} ,
				</if>
				<if test="item.yearrateDifferenceMoney == null">
					DEFAULT ,
				</if>
				<if test="item.punishAmount != null">
					#{item.punishAmount} ,
				</if>
				<if test="item.punishAmount == null">
					DEFAULT ,
				</if>
			<choose>
				<when test="item.planTime != null">
					#{item.planTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="item.actualTime != null">
					#{item.actualTime} ,
				</when>
				<otherwise>
					DEFAULT ,
				</otherwise>
			</choose>
				<if test="item.regUserId != null">
					#{item.regUserId} ,
				</if>
				<if test="item.regUserId == null">
					DEFAULT ,
				</if>
				<if test="item.state != null">
					#{item.state} ,
				</if>
				<if test="item.state == null">
					DEFAULT ,
				</if>
				<if test="item.actionScope != null">
					#{item.actionScope} ,
				</if>
				<if test="item.actionScope == null">
					DEFAULT ,
				</if>
			<choose>
				<when test="item.createTime != null">
					#{item.createTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="item.modifyTime != null">
					#{item.modifyTime} 
				</when>
				<otherwise>
					NOW() 
				</otherwise>
			</choose>
        )
        </foreach>
	</insert>
	
	<!-- 更新字段列表 -->
	<sql id="update_sql">
		<set>
			<if test="investId != null">
			invest_id = #{investId} ,
		   </if>
			<if test="bidId != null">
			bid_id = #{bidId} ,
		   </if>
			<if test="periods != null">
			periods = #{periods} ,
		   </if>
			<if test="amount != null ">
				amount = #{amount} ,
			</if>
			<if test="capitalAmount != null ">
				capital_amount = #{capitalAmount} ,
			</if>
			<if test="interestAmount != null ">
				interest_amount = #{interestAmount} ,
			</if>
			<if test="increaseAmount != null ">
				increase_amount = #{increaseAmount} ,
			</if>
			<if test="yearrateDifferenceMoney != null ">
				yearrate_difference_money = #{yearrateDifferenceMoney} ,
			</if>
			<if test="punishAmount != null ">
				punish_amount = #{punishAmount} ,
			</if>
			<if test="planTime != null">
				plan_time = #{planTime} ,
			</if>
			<if test="actualTime != null">
				actual_time = #{actualTime} ,
			</if>
			<if test="regUserId != null">
			reg_user_id = #{regUserId} ,
		   </if>
			<if test="state != null">
			state = #{state} ,
		   </if>
			<if test="createTime != null">
				create_time = #{createTime} ,
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime} 
			</if>
		</set>
	</sql>
    
	<!-- 更新 -->
	<update id="update">
		UPDATE  bid_receipt_plan
		<include refid="update_sql"/>
		<![CDATA[
		WHERE 
			id = #{id} 
		]]>
	</update>

	<!-- 删除 -->
	<delete id="delete">
		<![CDATA[
		DELETE FROM bid_receipt_plan 
		WHERE
			id = #{id} 
		]]>
	</delete>
    
	<!-- 根据ID查询 -->
	<select id="getById" resultMap="_BidReceiptPlan">
		SELECT <include refid="columns" />
		<![CDATA[
		FROM bid_receipt_plan 
		WHERE 1 = 1
			AND id = #{id}
		]]>
	</select>
	
	<!-- 查询条件 -->
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	  
			1 = 1    				
			<if test="id != null">
			AND id = #{id}
			</if>
			<if test="investId != null">
			AND invest_id = #{investId}
			</if>
			<if test="bidId != null">
			AND bid_id = #{bidId}
			</if>
			<if test="periods != null">
			AND periods = #{periods}
			</if>
			<if test="amount != null">
			AND amount = #{amount}
			</if>
			<if test="capitalAmount != null">
			AND capital_amount = #{capitalAmount}
			</if>
			<if test="interestAmount != null">
			AND interest_amount = #{interestAmount}
			</if>
			<if test="increaseAmount != null">
			AND increase_amount = #{increaseAmount}
			</if>
			<if test="yearrateDifferenceMoney != null">
			AND yearrate_difference_money = #{yearrateDifferenceMoney}
			</if>
			<if test="punishAmount != null">
			AND punish_amount = #{punishAmount}
			</if>
			<if test="planTimeBegin != null">
			AND plan_time >= #{planTimeBegin}
			</if>
			<if test="planTimeEnd != null">
			AND plan_time &lt;= #{planTimeEnd}
			</if>
			<if test="actualTimeBegin != null">
			AND actual_time >= #{actualTimeBegin}
			</if>
			<if test="actualTimeEnd != null">
			AND actual_time &lt;= #{actualTimeEnd}
			</if>
			<if test="regUserId != null">
			AND reg_user_id = #{regUserId}
			</if>
			<if test="state != null">
			AND state = #{state}
			</if>
			<if test="actionScope != null">
				AND action_scope = #{actionScope}
			</if>
			<if test="createTimeBegin != null">
			AND create_time >= #{createTimeBegin}
			</if>
			<if test="createTimeEnd != null">
			AND create_time &lt;= #{createTimeEnd}
			</if>
			<if test="modifyTimeBegin != null">
			AND modify_time >= #{modifyTimeBegin}
			</if>
			<if test="modifyTimeEnd != null">
			AND modify_time &lt;= #{modifyTimeEnd}
			</if>
			<if test="regUserIds != null and regUserIds.size != 0">
				AND reg_user_id IN
				<foreach collection="regUserIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>

		</where>
	</sql>

	<!-- 查询条件 -->
	<sql id="findPage_sta_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			1 = 1
			<if test="id != null">
				AND id = #{id}
			</if>

			<if test="bidId != null">
				AND bid_id = #{bidId}
			</if>

			<if test="planTimeBegin != null">
				AND plan_time >= #{planTimeBegin}
			</if>
			<if test="planTimeEnd != null">
				AND plan_time &lt;= #{planTimeEnd}
			</if>
			<if test="actualTimeBegin != null">
				AND actual_time >= #{actualTimeBegin}
			</if>
			<if test="actualTimeEnd != null">
				AND actual_time &lt;= #{actualTimeEnd}
			</if>
			<if test="regUserId != null">
				AND reg_user_id = #{regUserId}
			</if>
			<if test="state != null">
				AND state = #{state}
			</if>
			<if test="actionScope != null">
				AND action_scope = #{actionScope}
			</if>
			<if test="regUserIds != null and regUserIds.size != 0">
				AND reg_user_id IN
				<foreach collection="regUserIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>

		</where>
	</sql>
		
	<!-- 查询数量 -->
	<select id="findPage_count" resultType="long">
		SELECT COUNT(ID) FROM bid_receipt_plan 
		<include refid="findPage_where"/>    
	</select>
    
	<!-- 查询分页 -->
	<select id="findPage" resultMap="_BidReceiptPlan">
		SELECT <include refid="columns" />
		FROM bid_receipt_plan 
		<include refid="findPage_where"/>
		<if test="sortColumns != null and sortColumns !=''">
		ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="getSumInterest" resultType="java.math.BigDecimal">
		SELECT ifnull(sum(interest_amount),0) FROM bid_receipt_plan where 
		invest_id = ${investId} 
		<if test="state != null">
			AND state = #{state}
		</if>
	</select>
	
	<!-- 删除 -->
	<delete id="delByCondition">
		DELETE FROM bid_receipt_plan 
		WHERE 1 = 1
		<if test="state != null and state != -999">
			AND state = #{state}
		</if>
		<if test="bidId != null">
			AND bid_id = #{bidId}
		</if>
		<if test="periods != null">
			AND periods &gt;= #{periods}
		</if>
	</delete>
	
	<!-- 提前还本，并全部结清 -->
	<update id="updateForRepaySettle">
		UPDATE bid_receipt_plan
		SET state = 2,
		 amount = 0,
		 capital_amount = 0,
		 interest_amount = 0,
		 actual_time = NOW()
		WHERE
			bid_id = #{bidId}
		AND periods &gt;= #{periods}
		AND id >= #{id}
	</update>
	
	<delete id="delBidReceiptPlanBatch" parameterType="java.util.List">
        delete from  bid_receipt_plan
        WHERE
        id IN
        <foreach collection="list" open="(" separator="," close=")" item="fid">
            #{fid.id}
        </foreach>
    </delete>
    
    <!-- 查询待收金额 -->
    <select id="findAgencyFundByUserId" resultType="com.hongkun.finance.loan.model.vo.LoanVO" parameterType="java.util.Map">
		SELECT
			reg_user_id AS userId,
			IFNULL(SUM(CASE WHEN state IN (1) THEN amount ELSE 0 END), 0) AS amount,
			IFNULL(SUM(CASE WHEN state IN (1) THEN capital_amount ELSE 0 END), 0) AS capitalAmount,
			IFNULL(SUM(CASE WHEN state IN (1) THEN interest_amount ELSE 0 END), 0) AS interestAmount,
			IFNULL(SUM(CASE WHEN state IN (1) THEN increase_amount ELSE 0 END), 0) AS increaseAmount
		FROM
			bid_receipt_plan
		WHERE
			reg_user_id = #{userId}
        <if test="bidIds != null">
            AND bid_id NOT IN
            <foreach collection="bidIds" open="(" separator="," close=")" item="val">
                ${val}
            </foreach>
        </if>
			GROUP BY reg_user_id
	</select>

    <select id="findAgencyFundByUserIds" resultType="com.hongkun.finance.loan.model.vo.LoanVO">
		SELECT
			reg_user_id AS userId,
			IFNULL(SUM(CASE WHEN state IN (1) THEN amount ELSE 0 END), 0) AS amount,
			IFNULL(SUM(CASE WHEN state IN (1) THEN capital_amount ELSE 0 END), 0) AS capitalAmount,
			IFNULL(SUM(CASE WHEN state IN (1) THEN interest_amount ELSE 0 END), 0) AS interestAmount,
			IFNULL(SUM(CASE WHEN state IN (1) THEN increase_amount ELSE 0 END), 0) AS increaseAmount
		FROM
			bid_receipt_plan
		WHERE
			reg_user_id in 
            <foreach collection="collection" open="(" separator="," close=")" item="val">
              ${val}
            </foreach>
			GROUP BY reg_user_id
	</select>
	
	<!-- 统计回款计划项目 -->
	<select id="countReceiptPlan" resultType="com.hongkun.finance.loan.model.vo.LoanVO">
		SELECT
			bid_id AS bidId,
            invest_id AS investId,
			IFNULL(SUM(amount),0) AS amount,
			IFNULL(SUM(capital_amount),0) AS capitalAmount,
			IFNULL(SUM(interest_amount),0) AS interestAmount,
			IFNULL(SUM(increase_amount),0) AS increaseAmount,
			SUM(CASE WHEN state IN (1, 3) THEN 1 ELSE 0 END) AS unFinishPeriods,
			SUM(CASE WHEN state IN (2) THEN 1 ELSE 0 END) AS finishPeriods
		FROM
			bid_receipt_plan
		<include refid="find_where_countReceiptPlan"/>
		GROUP BY bid_id, invest_id
	</select>
	
	<select id="countReceiptPlanCount" resultType="java.lang.Long">
		SELECT
			count(DISTINCT bid_id)
		FROM
			bid_receipt_plan
		<include refid="find_where_countReceiptPlan"/>
	</select>
	
	<sql id="find_where_countReceiptPlan">
		<where>
			1 = 1
			<if test="userId != null">
				AND reg_user_id = #{userId}
			</if>
			<if test="states != null and states.size != 0">
				AND state IN
				<foreach collection="states" open="(" separator="," close=")" item="state">
					${state}
				</foreach>
			</if>
			<if test="bidIds != null and bidIds.size != 0">
				AND bid_id IN
				<foreach collection="bidIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
		</where>
	</sql>
	
	<select id="findLastReceiptPlan" resultMap="_BidReceiptPlan">
		SELECT
			<include refid="columns" />
		FROM
			bid_receipt_plan 
		WHERE invest_id = #{investId,jdbcType=INTEGER} AND state =1 
		ORDER BY periods DESC
		LIMIT 0,1			
	</select>
	<select id="findNextReceiptPlan" resultMap="_BidReceiptPlan">
		SELECT
			<include refid="columns" />
		FROM
			bid_receipt_plan 
		WHERE invest_id = #{investId,jdbcType=INTEGER} AND state =1 
		ORDER BY periods ASC
		LIMIT 0,1			
	</select>
	
	<select id="findSumInterestByInvestIds"  resultType="java.util.Map" parameterType="java.util.List">
		SELECT
			invest_id as investId,
			ifnull(sum(interest_amount),0) as interestAmount
		FROM
			bid_receipt_plan
		where  invest_id IN
				<foreach collection="list" open="(" separator="," close=")" item="val">
					#{val}
				</foreach>
		group by invest_id 
	</select>

	<select id="findSumInterestByInvestId"  resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
		SELECT
		ifnull(sum(interest_amount),0) as interestAmount
		FROM
		bid_receipt_plan
		where  invest_id  = #{investId}
	</select>

	
	<!-- 查询待收本金、利息、加息 -->
	<select id="countWaitReceiptPlanAmount" resultType="java.util.HashMap">
		SELECT
			COALESCE (sum(CASE state WHEN 1 THEN amount + increase_amount ELSE 0 END), 0) AS amountSum,
			COALESCE (sum(CASE state WHEN 1 THEN capital_amount ELSE 0 END), 0) AS capitalSum,
			COALESCE (sum(CASE state WHEN 1 THEN interest_amount ELSE 0 END), 0) AS interestSum,
			COALESCE (sum(CASE state WHEN 1 THEN increase_amount ELSE 0 END), 0) AS increaseSum
		FROM
			bid_receipt_plan
		WHERE
			1 = 1
			<if test="regUserId != null">
				AND reg_user_id = #{regUserId}
			</if>
	</select>
	
	<!-- 查询每个收益中个的待回款本金、利息、加息、增值收益 -->
	<select id="countReceiptPlanAmountListCount" resultType="long">
		SELECT count(a.bidId) FROM (
			SELECT
			bid_id AS bidId
		FROM
			bid_receipt_plan
		WHERE
			1 = 1
			<if test="regUserId != null">
				AND reg_user_id = #{regUserId}
			</if>
		GROUP BY
			bid_id
		) AS a
	</select>
	
	<select id="countReceiptPlanAmountList" resultType="java.util.HashMap">
		SELECT
			bid_id AS bidId,
			COALESCE (sum(amount), 0) AS amountSum,
			COALESCE (sum(capital_amount), 0) AS capitalSum,
			COALESCE (sum(interest_amount), 0) AS interestSum,
			COALESCE (sum(increase_amount), 0) AS increaseSum,
			COALESCE (sum(punish_amount), 0) AS punishSum,
			COALESCE (sum(CASE state WHEN 1 THEN amount ELSE 0 END), 0) AS waitAmountSum,
			COALESCE (sum(CASE state WHEN 1 THEN capital_amount ELSE 0 END), 0) AS waitCapitalSum,
			COALESCE (sum(CASE state WHEN 1 THEN interest_amount ELSE 0 END), 0) AS waitInterestSum,
			COALESCE (sum(CASE state WHEN 1 THEN increase_amount ELSE 0 END), 0) AS waitIncreaseSum,
			COALESCE (sum(CASE state WHEN 1 THEN punish_amount ELSE 0 END), 0) AS waitPunishSum,
			COALESCE (sum(CASE state WHEN 2 THEN amount ELSE 0 END), 0) AS finishAmountSum,
			COALESCE (sum(CASE state WHEN 2 THEN capital_amount ELSE 0 END), 0) AS finishCapitalSum,
			COALESCE (sum(CASE state WHEN 2 THEN interest_amount ELSE 0 END), 0) AS finishInterestSum,
			COALESCE (sum(CASE state WHEN 2 THEN increase_amount ELSE 0 END), 0) AS finishIncreaseSum,
			COALESCE (sum(CASE state WHEN 2 THEN punish_amount ELSE 0 END), 0) AS finishPunishSum
		FROM
			bid_receipt_plan
		WHERE
			1 = 1
			<if test="regUserId != null">
				AND reg_user_id = #{regUserId}
			</if>
		GROUP BY
			bid_id
	</select>

	<!-- 近三个月有回款计划的用户 -->
	<select id="findUserThreeMonthPlan" resultType="java.lang.Integer">
		SELECT DISTINCT
			reg_user_id
		FROM
			bid_receipt_plan
		WHERE
			reg_user_id IN
			<foreach collection="collection" open="(" separator="," close=")" item="uid">
				${uid}
			</foreach>
			AND plan_time > DATE_ADD(NOW(), INTERVAL - 3 MONTH)
	</select>


	<!-- 后台管理查询回款计划查询数量 -->
	<select id="findReceiptPlanListForManageStatisticsCount" resultType="long">
		SELECT count(1) FROM (
			(SELECT COUNT(1) FROM bid_receipt_plan
				<include refid="findPage_sta_where"/>
			  GROUP BY
			 	reg_user_id)
			  AS total
		)
	</select>

	<!--后台管理查询回款计划列表-->
	<select id="findReceiptPlanListForManageStatistics" resultType="com.hongkun.finance.loan.model.vo.BidReceiptPlanVo">
		SELECT
			count(1) as remainCount,
			bid_id AS bidId,
			reg_user_id AS regUserId,
			IFNULL(SUM(CASE WHEN state IN (1) THEN amount ELSE 0 END), 0) AS amount,
			IFNULL(SUM(CASE WHEN state IN (1) THEN capital_amount ELSE 0 END), 0) AS capitalAmount,
			IFNULL(SUM(CASE WHEN state IN (1) THEN interest_amount ELSE 0 END), 0) AS interestAmount,
			IFNULL(SUM(CASE WHEN state IN (1) THEN increase_amount ELSE 0 END), 0) AS increaseAmount
		FROM bid_receipt_plan
		<include refid="findPage_sta_where"/>
		GROUP BY reg_user_id
        <if test="sortColumns != null and sortColumns !=''">
            ORDER BY ${sortColumns}
        </if>
	</select>

	<!-- 统计管理用户回款计划记录 -->
	<select id="findBidReceiptPlanListByUserIdCount" resultType="long">
		SELECT count(1)
		FROM bid_receipt_plan
		<include refid="findPage_sta_where"/>
	</select>


	<select id="findMinPlanTimeDue" resultType="java.util.Date">
		SELECT
			MIN(time)
		FROM
			(
				SELECT
					lr.bid_id,
					max(lr.plan_time) AS time
				FROM
					bid_receipt_plan lr left join bid_info bi on lr.bid_id = bi.id
					left join bid_product bp on bi.bid_product_id = bp.id
				WHERE
						lr.reg_user_id =   #{regUserId}
					  AND bp.type != 7
				AND lr.STATE = 1
				GROUP BY
					lr.bid_id
			) a;
	</select>

	<!-- 统计管理用户回款计划记录 -->
	<select id="findBidReceiptPlanListByUserId" resultType="com.hongkun.finance.loan.model.vo.BidReceiptPlanVo">
		SELECT
			id as id ,
			invest_id as investId,
			bid_id as bidId,
			periods as periods,
			amount as amount,
			capital_amount as capitalAmount,
			interest_amount as interestAmount,
			increase_amount as increaseAmount,
			punish_amount as punish_amount,
			plan_time as planTime,
			actual_time as actualTime,
			reg_user_id as regUserId,
			state as state,
			create_time as createTime
		FROM bid_receipt_plan
		<include refid="findPage_sta_where"/>
		<if test="sortColumns != null and sortColumns !=''">
			ORDER BY ${sortColumns}
		</if>
	</select>

    <!-- 查询回款计划统计明细 -->
    <select id="findReceiptPlanCountDetail" resultType="java.util.HashMap">
        SELECT
        bid_id AS bidId,
        invest_id AS investId,
        MIN(id) AS id,
        COALESCE (sum(CASE state WHEN 1 THEN amount ELSE 0 END), 0) AS waitAmountSum,
        COALESCE (sum(CASE state WHEN 1 THEN capital_amount ELSE 0 END), 0) AS waitCapitalSum,
        COALESCE (sum(CASE state WHEN 1 THEN interest_amount ELSE 0 END), 0) AS waitInterestSum,
        COALESCE (sum(CASE state WHEN 1 THEN increase_amount ELSE 0 END), 0) AS waitIncreaseSum,
        COALESCE (sum(CASE state WHEN 1 THEN punish_amount ELSE 0 END), 0) AS waitPunishSum,
        COALESCE (sum(CASE state WHEN 2 THEN amount ELSE 0 END), 0) AS finishAmountSum,
        COALESCE (sum(CASE state WHEN 2 THEN capital_amount ELSE 0 END), 0) AS finishCapitalSum,
        COALESCE (sum(CASE state WHEN 2 THEN interest_amount ELSE 0 END), 0) AS finishInterestSum,
        COALESCE (sum(CASE state WHEN 2 THEN increase_amount ELSE 0 END), 0) AS finishIncreaseSum,
        COALESCE (sum(CASE state WHEN 2 THEN punish_amount ELSE 0 END), 0) AS finishPunishSum
        FROM
        bid_receipt_plan
        WHERE
        reg_user_id = #{regUserId,jdbcType=INTEGER}
        GROUP BY bid_id, invest_id
        ORDER BY id ASC
    </select>
</mapper>
