<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.hongkun.finance.loan.model.BidRepayPlan">

	<!-- POJO类与数据库字段对应关系 -->
	<resultMap id="_BidRepayPlan" type="com.hongkun.finance.loan.model.BidRepayPlan">
		<result property="id" column="id"/>
		<result property="bidId" column="bid_id"/>
		<result property="periods" column="periods"/>
		<result property="amount" column="amount"/>
		<result property="capitalAmount" column="capital_amount"/>
		<result property="interestAmount" column="interest_amount"/>
		<result property="residueAmount" column="residue_amount"/>
		<result property="punishAmount" column="punish_amount"/>
		<result property="deditAmount" column="dedit_amount"/>
		<result property="serviceCharge" column="service_charge"/>
		<result property="planTime" column="plan_time"/>
		<result property="actualTime" column="actual_time"/>
		<result property="regUserId" column="reg_user_id"/>
		<result property="riskaccountTime" column="riskaccount_time"/>
		<result property="state" column="state"/>
		<result property="action_scope" column="actionScope"/>
		<result property="createTime" column="create_time"/>
		<result property="modifyTime" column="modify_time"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		<![CDATA[
		id,bid_id,periods,amount,capital_amount,interest_amount,residue_amount,punish_amount,dedit_amount,service_charge,plan_time,actual_time,reg_user_id,riskaccount_time,state,action_scope,create_time,modify_time
		]]>
	</sql>

	<!-- 插入 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO bid_repay_plan ( 
			<if test="id != null">
				id ,
			</if>
			<if test="bidId != null">
				bid_id ,
			</if>
			<if test="periods != null">
				periods ,
			</if>
			<if test="amount != null">
				amount ,
			</if>
			<if test="capitalAmount != null">
				capital_amount ,
			</if>
			<if test="interestAmount != null">
				interest_amount ,
			</if>
			<if test="residueAmount != null">
				residue_amount ,
			</if>
			<if test="punishAmount != null">
				punish_amount ,
			</if>
			<if test="deditAmount != null">
				dedit_amount ,
			</if>
			<if test="serviceCharge != null">
				service_charge ,
			</if>
				plan_time ,
				actual_time ,
			<if test="regUserId != null">
				reg_user_id ,
			</if>
				riskaccount_time ,
			<if test="state != null">
				state ,
			</if>
			<if test="actionScope != null">
				action_scope ,
			</if>
				create_time ,
				modify_time 
		) VALUES (
			<if test="id != null">
				#{id} ,
			</if>
			<if test="bidId != null">
				#{bidId} ,
			</if>
			<if test="periods != null">
				#{periods} ,
			</if>
			<if test="amount != null">
				#{amount} ,
			</if>
			<if test="capitalAmount != null">
				#{capitalAmount} ,
			</if>
			<if test="interestAmount != null">
				#{interestAmount} ,
			</if>
			<if test="residueAmount != null">
				#{residueAmount} ,
			</if>
			<if test="punishAmount != null">
				#{punishAmount} ,
			</if>
			<if test="deditAmount != null">
				#{deditAmount} ,
			</if>
			<if test="serviceCharge != null">
				#{serviceCharge} ,
			</if>
			<choose>
				<when test="planTime != null">
					#{planTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="actualTime != null">
					#{actualTime} ,
				</when>
				<otherwise>
					DEFAULT ,
				</otherwise>
			</choose>
			<if test="regUserId != null">
				#{regUserId} ,
			</if>
			<choose>
				<when test="riskaccountTime != null">
					#{riskaccountTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<if test="state != null">
				#{state} ,
			</if>
			<choose>
				<when test="actionScope != null">
					#{actionScope} ,
				</when>
				<otherwise>
					DEFAULT ,
				</otherwise>
			</choose>
			<choose>
				<when test="createTime != null">
					#{createTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="modifyTime != null">
					#{modifyTime} 
				</when>
				<otherwise>
					NOW() 
				</otherwise>
			</choose>
		)
	</insert>
	
	<!-- 批量插入 -->
	<insert id="insertBatch" useGeneratedKeys="true" parameterType="java.util.List">
		INSERT INTO bid_repay_plan (
        	id ,
        	bid_id ,
        	periods ,
        	amount ,
        	capital_amount ,
        	interest_amount ,
        	residue_amount ,
        	punish_amount ,
        	dedit_amount ,
        	service_charge ,
        	plan_time ,
        	actual_time ,
        	reg_user_id ,
        	riskaccount_time ,
        	state ,
			action_scope,
        	create_time ,
        	modify_time 
        ) VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
        (
				<if test="item.id != null">
					#{item.id} ,
				</if>
				<if test="item.id == null">
					DEFAULT ,
				</if>
				<if test="item.bidId != null">
					#{item.bidId} ,
				</if>
				<if test="item.bidId == null">
					DEFAULT ,
				</if>
				<if test="item.periods != null">
					#{item.periods} ,
				</if>
				<if test="item.periods == null">
					DEFAULT ,
				</if>
				<if test="item.amount != null">
					#{item.amount} ,
				</if>
				<if test="item.amount == null">
					DEFAULT ,
				</if>
				<if test="item.capitalAmount != null">
					#{item.capitalAmount} ,
				</if>
				<if test="item.capitalAmount == null">
					DEFAULT ,
				</if>
				<if test="item.interestAmount != null">
					#{item.interestAmount} ,
				</if>
				<if test="item.interestAmount == null">
					DEFAULT ,
				</if>
				<if test="item.residueAmount != null">
					#{item.residueAmount} ,
				</if>
				<if test="item.residueAmount == null">
					DEFAULT ,
				</if>
				<if test="item.punishAmount != null">
					#{item.punishAmount} ,
				</if>
				<if test="item.punishAmount == null">
					DEFAULT ,
				</if>
				<if test="item.deditAmount != null">
					#{item.deditAmount} ,
				</if>
				<if test="item.deditAmount == null">
					DEFAULT ,
				</if>
				<if test="item.serviceCharge != null">
					#{item.serviceCharge} ,
				</if>
				<if test="item.serviceCharge == null">
					DEFAULT ,
				</if>
			<choose>
				<when test="item.planTime != null">
					#{item.planTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="item.actualTime != null">
					#{item.actualTime} ,
				</when>
				<otherwise>
					DEFAULT ,
				</otherwise>
			</choose>
				<if test="item.regUserId != null">
					#{item.regUserId} ,
				</if>
				<if test="item.regUserId == null">
					DEFAULT ,
				</if>
			<choose>
				<when test="item.riskaccountTime != null">
					#{item.riskaccountTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
				<if test="item.state != null">
					#{item.state} ,
				</if>
				<if test="item.state == null">
					DEFAULT ,
				</if>
				<if test="item.actionScope != null">
					#{item.actionScope} ,
				</if>
				<if test="item.actionScope == null">
					DEFAULT ,
				</if>
			<choose>
				<when test="item.createTime != null">
					#{item.createTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="item.modifyTime != null">
					#{item.modifyTime} 
				</when>
				<otherwise>
					NOW() 
				</otherwise>
			</choose>
        )
        </foreach>
	</insert>
	
	<!-- 更新字段列表 -->
	<sql id="update_sql">
		<set>
			<if test="bidId != null">
			bid_id = #{bidId} ,
		   </if>
			<if test="periods != null">
			periods = #{periods} ,
		   </if>
			<if test="amount != null ">
				amount =amount + #{amount} ,
			</if>
			<if test="capitalAmount != null ">
				capital_amount =capital_amount + #{capitalAmount} ,
			</if>
			<if test="interestAmount != null ">
				interest_amount =interest_amount + #{interestAmount} ,
			</if>
			<if test="residueAmount != null ">
				residue_amount =residue_amount + #{residueAmount} ,
			</if>
			<if test="punishAmount != null ">
				punish_amount =punish_amount + #{punishAmount} ,
			</if>
			<if test="deditAmount != null ">
				dedit_amount =dedit_amount + #{deditAmount} ,
			</if>
			<if test="serviceCharge != null ">
				service_charge =service_charge + #{serviceCharge} ,
			</if>
			<if test="planTime != null">
				plan_time = #{planTime} ,
			</if>
			<if test="actualTime != null">
				actual_time = #{actualTime} ,
			</if>
			<if test="regUserId != null">
			reg_user_id = #{regUserId} ,
		   </if>
			<if test="riskaccountTime != null">
				riskaccount_time = #{riskaccountTime} ,
			</if>
			<if test="state != null">
			state = #{state} ,
		   </if>
			<if test="createTime != null">
				create_time = #{createTime} ,
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime} 
			</if>
		</set>
	</sql>
    
	<!-- 更新 -->
	<update id="update">
		UPDATE  bid_repay_plan
		<include refid="update_sql"/>
		<![CDATA[
		WHERE 
			id = #{id} 
		]]>
	</update>

	<!-- 删除 -->
	<delete id="delete">
		<![CDATA[
		DELETE FROM bid_repay_plan 
		WHERE
			id = #{id} 
		]]>
	</delete>
	
	<delete id="deleteRepayPlanBatch" parameterType="List">
        delete from  bid_repay_plan
        WHERE
        id IN
        <foreach collection="repayPlans" open="(" separator="," close=")" item="fid">
            #{fid.id}
        </foreach>
    </delete>
    
    
	<!-- 根据ID查询 -->
	<select id="getById" resultMap="_BidRepayPlan">
		SELECT <include refid="columns" />
		<![CDATA[
		FROM bid_repay_plan 
		WHERE 1 = 1
			AND id = #{id}
		]]>
	</select>
	
	<!-- 查询条件 -->
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	  
			1 = 1    				
			<if test="id != null">
			AND id = #{id}
			</if>
			<if test="bidId != null">
			AND bid_id = #{bidId}
			</if>
			<if test="periods != null">
			AND periods = #{periods}
			</if>
			<if test="amount != null">
			AND amount = #{amount}
			</if>
			<if test="capitalAmount != null">
			AND capital_amount = #{capitalAmount}
			</if>
			<if test="interestAmount != null">
			AND interest_amount = #{interestAmount}
			</if>
			<if test="residueAmount != null">
			AND residue_amount = #{residueAmount}
			</if>
			<if test="punishAmount != null">
			AND punish_amount = #{punishAmount}
			</if>
			<if test="deditAmount != null">
			AND dedit_amount = #{deditAmount}
			</if>
			<if test="serviceCharge != null">
			AND service_charge = #{serviceCharge}
			</if>
			<if test="planTimeBegin != null">
			AND plan_time >= #{planTimeBegin}
			</if>
			<if test="planTimeEnd != null">
			AND plan_time &lt;= #{planTimeEnd}
			</if>
			<if test="actualTimeBegin != null">
			AND actual_time >= #{actualTimeBegin}
			</if>
			<if test="actualTimeEnd != null">
			AND actual_time &lt;= #{actualTimeEnd}
			</if>
			<if test="regUserId != null">
			AND reg_user_id = #{regUserId}
			</if>
			<if test="riskaccountTimeBegin != null">
			AND riskaccount_time >= #{riskaccountTimeBegin}
			</if>
			<if test="riskaccountTimeEnd != null">
			AND riskaccount_time &lt;= #{riskaccountTimeEnd}
			</if>
			<if test="state != null and state != -999">
			AND state = #{state}
			</if>
			<if test="actionScope != null">
				AND action_scope = #{actionScope}
			</if>
			<if test="createTimeBegin != null and createTimeBegin != ''">
			AND create_time >= #{createTimeBegin}
			</if>
			<if test="createTimeEnd != null and createTimeEnd != ''">
			AND create_time &lt;= #{createTimeEnd}
			</if>
			<if test="modifyTimeBegin != null and modifyTimeBegin != -999">
			AND modify_time >= #{modifyTimeBegin}
			</if>
			<if test="modifyTimeEnd != null and modifyTimeEnd != -999">
			AND modify_time &lt;= #{modifyTimeEnd}
			</if>
			<if test="bidIds != null and bidIds.size != 0">
				AND bid_id IN
				<foreach collection="bidIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
			<if test="regUserIds != null and regUserIds.size != 0">
				AND reg_user_id IN
				<foreach collection="regUserIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
            <if test="states != null and states.size != 0">
                AND state IN
                <foreach collection="states" open="(" separator="," close=")" item="val">
                    ${val}
                </foreach>
            </if>
		</where>
	</sql>

	<!-- 查询条件 -->
	<sql id="findPage_sta_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			1 = 1
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="bidId != null">
				AND bid_id = #{bidId}
			</if>
			<if test="planTimeBegin != null">
				AND plan_time >= #{planTimeBegin}
			</if>
			<if test="planTimeEnd != null">
				AND plan_time &lt;= #{planTimeEnd}
			</if>
			<if test="actualTimeBegin != null">
				AND actual_time >= #{actualTimeBegin}
			</if>
			<if test="actualTimeEnd != null">
				AND actual_time &lt;= #{actualTimeEnd}
			</if>
			<if test="regUserId != null">
				AND reg_user_id = #{regUserId}
			</if>
			<if test="state != null and state != -999">
				AND state = #{state}
			</if>
			<if test="actionScope != null">
				AND action_scope = #{actionScope}
			</if>
			<if test="createTimeBegin != null and createTimeBegin != ''">
				AND create_time >= #{createTimeBegin}
			</if>
			<if test="createTimeEnd != null and createTimeEnd != ''">
				AND create_time &lt;= #{createTimeEnd}
			</if>
			<if test="modifyTimeBegin != null and modifyTimeBegin != -999">
				AND modify_time >= #{modifyTimeBegin}
			</if>
			<if test="modifyTimeEnd != null and modifyTimeEnd != -999">
				AND modify_time &lt;= #{modifyTimeEnd}
			</if>
			<if test="bidIds != null and bidIds.size != 0">
				AND bid_id IN
				<foreach collection="bidIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
			<if test="regUserIds != null and regUserIds.size != 0">
				AND reg_user_id IN
				<foreach collection="regUserIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
		</where>
	</sql>


		
	<!-- 查询数量 -->
	<select id="findPage_count" resultType="long">
		SELECT COUNT(ID) FROM bid_repay_plan 
		<include refid="findPage_where"/>    
	</select>
    
	<!-- 查询分页 -->
	<select id="findPage" resultMap="_BidRepayPlan">
		SELECT <include refid="columns" />
		FROM bid_repay_plan 
		<include refid="findPage_where"/>
		<if test="sortColumns != null and sortColumns !=''">
		ORDER BY ${sortColumns}
		</if>
	</select>

	<!-- 查询分页 -->
	<select id="findLastRepayPlanTime" resultType="java.util.Date">
		select max(plan_time) from bid_repay_plan where bid_id = #{bidId}
	</select>
	
	<select id="findNextRepayPlanTime" resultType="java.util.Date">
		select min(plan_time) from bid_repay_plan where bid_id = #{bidId} and state = 1 
	</select>
	<!-- 根据标的查询 -->
	<select id="findCurrRepayPlan" resultMap="_BidRepayPlan">
		SELECT <include refid="columns" />
		<![CDATA[
		FROM bid_repay_plan 
		WHERE 1 = 1 AND 
			bid_id = #{bidId} and state in (1,3) order by periods limit 0,1
		]]>
	</select>
	<!-- 统计还款计划金额-->
	<select id="countRepayPlanAmount" resultType="java.util.HashMap">
		SELECT
			COALESCE (sum(amount), 0) AS repaySum,
			COALESCE (sum(capital_amount), 0) AS capitalSum,
			COALESCE (sum(interest_amount), 0) AS interestSum,
			COALESCE (sum(punish_amount), 0) AS punishSum,
			COALESCE (sum(service_charge), 0) AS serviceSum,
			COALESCE (sum(CASE state WHEN 1 THEN amount ELSE 0 END), 0) AS repayState1,
			COALESCE (sum(CASE state WHEN 2 THEN amount ELSE 0 END), 0) AS repayState2,
			COALESCE (sum(CASE state WHEN 3 THEN amount ELSE 0 END), 0) AS repayState3,
			COALESCE (sum(CASE state WHEN 4 THEN amount ELSE 0 END), 0) AS repayState4,
			COALESCE (sum(CASE state WHEN 8 THEN amount ELSE 0 END), 0) AS repayState8
		FROM bid_repay_plan
		<include refid="findPage_where"/>
	</select>
	<!-- 删除 -->
	<delete id="delByCondtion">
		DELETE FROM bid_repay_plan 
		WHERE 1 = 1 
		<if test="state != null and state != -999">
			AND state = #{state}
		</if>
		<if test="bidId != null">
			AND bid_id = #{bidId}
		</if>
		<if test="periods != null">
			AND periods &gt;= #{periods}
		</if>
	</delete>
	
	<!-- 提前还本，并全部结清 -->
	<update id="updateForRepaySettle">	
		UPDATE bid_repay_plan
		SET state = (CASE WHEN periods = #{periods} THEN 8 ELSE 2 END),
		 amount = 0,
		 capital_amount = 0,
		 interest_amount = 0,
		 residue_amount = 0,
		 service_charge = 0,
		 actual_time = NOW()
		WHERE
			bid_id = #{bidId}
		AND periods &gt;= #{periods}
		AND id >= #{id}
	</update>
	
	<!-- 统计还款计划项目 -->
	<select id="countRepayPlan" resultType="com.hongkun.finance.loan.model.vo.LoanVO">
		SELECT
			bid_id AS bidId,
			IFNULL(SUM(amount),0) AS amount,
			IFNULL(SUM(capital_amount),0) AS capitalAmount,
			IFNULL(SUM(interest_amount),0) AS interestAmount,
			IFNULL(SUM(punish_amount),0) AS punishAmount,
			IFNULL(SUM(dedit_amount),0) AS deditAmount,
			IFNULL(SUM(service_charge),0) AS serviceCharge,
			SUM(CASE WHEN state IN (1, 3) THEN 1 ELSE 0 END) AS unFinishPeriods,
			SUM(CASE WHEN state IN (2) THEN 1 ELSE 0 END) AS finishPeriods
		FROM
			bid_repay_plan
		<include refid="find_where_countRepayPlan"/>
		GROUP BY bid_id
	</select>
	
	<select id="countRepayPlanCount" resultType="java.lang.Long">
		SELECT
			count(DISTINCT bid_id)
		FROM
			bid_repay_plan
		<include refid="find_where_countRepayPlan"/>
	</select>
	
	<sql id="find_where_countRepayPlan">
		<where>
			1 = 1
			<if test="userId != null">
				AND reg_user_id = #{userId}
			</if>
			<if test="states != null and states.size != 0">
				AND state IN
				<foreach collection="states" open="(" separator="," close=")" item="state">
					${state}
				</foreach>
			</if>
			<if test="bidIds != null and bidIds.size != 0">
				AND bid_id IN
				<foreach collection="bidIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
		</where>
	</sql>
	
	<select id="findByBidinfoId" resultMap="_BidRepayPlan">
		SELECT
			id,amount,capital_amount,interest_amount,punish_amount,plan_time,actual_time,state 
		FROM
			bid_repay_plan
		where bid_id = #{bidInfoId}
	</select>
	
	<select id="findLastRepayPlanTimeByIds"  resultType="com.hongkun.finance.loan.model.BidRepayPlan" parameterType="java.util.List">
		SELECT
			bid_id as bidId,
			max(plan_time) as planTime 
		FROM
			bid_repay_plan
		where  bid_id IN
				<foreach collection="list" open="(" separator="," close=")" item="val">
					#{val}
				</foreach>
		group by bid_id 
	</select>
	
	<!-- 查询标还款计划应还款的期数-->
	<select id="findCurrRepayPlanIdByBidIds" resultType="java.util.HashMap">
		SELECT
			bid_id as bidId,
			MIN(periods) as periods,
            MIN(plan_time) as planTime
		FROM
			bid_repay_plan
		WHERE
			state = 1
			<if test="regUserId != null">
				AND reg_user_id = #{regUserId}
			</if>
			<if test="bidIds != null and bidIds.size != 0">
				AND bid_id IN
				<foreach collection="bidIds" open="(" separator="," close=")" item="val">
					${val}
				</foreach>
			</if>
		GROUP BY
			bid_id;
	</select>

    <!-- 查询还有需要提醒还款的还款计划 -->
    <select id="findNeedNoticeRepayPlanList" resultMap="_BidRepayPlan">
        SELECT
            reg_user_id,
            bid_id,
            amount,
            service_charge,
            plan_time
        FROM
            bid_repay_plan
        WHERE
            state = 1
        AND TO_DAYS(plan_time) - TO_DAYS(NOW()) = 3;
    </select>

	<select id="findBidRepayPlanListForStaIncomes" resultMap="_BidRepayPlan">
		SELECT <include refid="columns" />
		FROM bid_repay_plan where 1=1 and service_charge &gt;  0
		<if test="planTimeBegin != null">
			AND plan_time >= #{planTimeBegin}
		</if>
		<if test="planTimeEnd != null">
			AND plan_time &lt;= #{planTimeEnd}
		</if>
		<if test="state != null and state != -999">
			AND state = #{state}
		</if>
		<if test="sortColumns != null and sortColumns !=''">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="findSumRepayAtmByBidId" resultType="java.math.BigDecimal">
		SELECT IFNULL(sum(capital_amount+interest_amount),0)
		FROM bid_repay_plan where bid_id = #{bidId}
	</select>


	<!-- 后台管理还款计划查询数量 -->
	<select id="findRepayPlanListForManageStatisticsCount" resultType="long">
		SELECT COUNT(ID) FROM bid_repay_plan
		<include refid="findPage_sta_where"/>
	</select>

	<!-- 后台管理还款计划列表 -->
	<select id="findRepayPlanListForManageStatistics" resultType="com.hongkun.finance.loan.model.vo.BidRepayPlanVo">
		SELECT
			id as id,
			bid_id as bidId,
			periods as periods,
			amount as amount,
			capital_amount as capitalAmount,
			interest_amount as interestAmount,
			residue_amount as residueAmount,
			punish_amount as punishAmount,
			service_charge as serviceCharge,
			plan_time as planTime,
			actual_time as actualTime,
			reg_user_id as regUserId,
			create_time as createTime,
			state as state,
		    action_scope as actionScope
		FROM bid_repay_plan
		<include refid="findPage_sta_where"/>
        <if test="sortColumns != null and sortColumns !=''">
            ORDER BY ${sortColumns}
        </if>
	</select>

    <!-- 统计标的已还金额 -->
    <select id="findRepayedSta"  resultType="com.hongkun.finance.loan.model.BidRepayPlan" parameterType="java.util.List">
        SELECT
          bid_id AS bidId,
          <!-- 总利息 -->
          IFNULL(SUM(interest_amount), 0) AS amount,
          IFNULL(SUM(CASE WHEN state=2 OR state=8 THEN capital_amount ELSE 0 END), 0) AS captailAmount,
          IFNULL(SUM(CASE WHEN state=2 OR state=8 THEN interest_amount ELSE 0 END), 0) AS interestAmount,
          MAX(CASE WHEN state=2 OR state=8 THEN actual_time ELSE '' END) AS actualTime
        FROM
          bid_repay_plan
        WHERE  bid_id IN
        <foreach collection="list" open="(" separator="," close=")" item="val">
            #{val}
        </foreach>
        GROUP BY
          bid_id
    </select>

</mapper>
