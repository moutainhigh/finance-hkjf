<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.hongkun.finance.user.model.RegUserRecommend">

	<!-- POJO类与数据库字段对应关系 -->
	<resultMap id="_RegUserRecommend" type="com.hongkun.finance.user.model.RegUserRecommend">
		<result property="id" column="id" />
		<result property="regUserId" column="reg_user_id" />
		<result property="recommendUserid" column="recommend_userid" />
		<result property="twoRecommendUserid" column="two_recommend_userid" />
		<result property="investTime" column="invest_time" />
		<result property="state" column="state" />
		<result property="createTime" column="create_time" />
		<result property="modifyTime" column="modify_time" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		<![CDATA[
		id,reg_user_id,recommend_userid,two_recommend_userid,invest_time,state,create_time,modify_time
		]]>
	</sql>

	<!-- 插入 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO reg_user_recommend (
		<if test="id != null">
			id ,
		</if>
		<if test="regUserId != null">
			reg_user_id ,
		</if>
		<if test="recommendUserid != null">
			recommend_userid ,
		</if>
		<if test="twoRecommendUserid != null">
			two_recommend_userid ,
		</if>
		invest_time ,
		<if test="state != null">
			state ,
		</if>
		create_time ,
		modify_time
		) VALUES (
		<if test="id != null">
			#{id} ,
		</if>
		<if test="regUserId != null">
			#{regUserId} ,
		</if>
		<if test="recommendUserid != null">
			#{recommendUserid} ,
		</if>
		<if test="twoRecommendUserid != null">
			#{twoRecommendUserid} ,
		</if>
		<choose>
			<when test="investTime != null">
				#{investTime} ,
			</when>
			<otherwise>
				NOW() ,
			</otherwise>
		</choose>
		<if test="state != null">
			#{state} ,
		</if>
		<choose>
			<when test="createTime != null">
				#{createTime} ,
			</when>
			<otherwise>
				NOW() ,
			</otherwise>
		</choose>
		<choose>
			<when test="modifyTime != null">
				#{modifyTime}
			</when>
			<otherwise>
				NOW()
			</otherwise>
		</choose>
		)
	</insert>

	<!-- 批量插入 -->
	<insert id="insertBatch" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
		INSERT INTO reg_user_recommend (
		<if test="id != null">
			id ,
		</if>
		<if test="regUserId != null">
			reg_user_id ,
		</if>
		<if test="recommendUserid != null">
			recommend_userid ,
		</if>
		<if test="twoRecommendUserid != null">
			two_recommend_userid ,
		</if>
		invest_time ,
		<if test="state != null">
			state ,
		</if>
		create_time ,
		modify_time
		) VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(
			<if test="id != null">
				#{id} ,
			</if>
			<if test="regUserId != null">
				#{regUserId} ,
			</if>
			<if test="recommendUserid != null">
				#{recommendUserid} ,
			</if>
			<if test="twoRecommendUserid != null">
				#{twoRecommendUserid} ,
			</if>
			<choose>
				<when test="investTime != null">
					#{investTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<if test="state != null">
				#{state} ,
			</if>
			<choose>
				<when test="createTime != null">
					#{createTime} ,
				</when>
				<otherwise>
					NOW() ,
				</otherwise>
			</choose>
			<choose>
				<when test="modifyTime != null">
					#{modifyTime}
				</when>
				<otherwise>
					NOW()
				</otherwise>
			</choose>
			)
		</foreach>
	</insert>

	<!-- 更新字段列表 -->
	<sql id="update_sql">
		<set>
			<if test="regUserId != null">
				reg_user_id = #{regUserId} ,
			</if>
			<if test="recommendUserid != null">
				recommend_userid = #{recommendUserid} ,
			</if>
			<if test="twoRecommendUserid != null">
				two_recommend_userid = #{twoRecommendUserid} ,
			</if>
			<if test="investTime != null">
				invest_time = #{investTime} ,
			</if>
			<if test="state != null">
				state = #{state} ,
			</if>
			<if test="createTime != null">
				create_time = #{createTime} ,
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime}
			</if>
		</set>
	</sql>

	<!-- 更新 -->
	<update id="update">
		UPDATE reg_user_recommend
		<include refid="update_sql" />
		<![CDATA[
		WHERE 
			id = #{id} 
		]]>
	</update>

	<!-- 删除 -->
	<delete id="delete">
		<![CDATA[
		DELETE FROM reg_user_recommend 
		WHERE
			id = #{id} 
		]]>
	</delete>

	<!-- 根据ID查询 -->
	<select id="getById" resultMap="_RegUserRecommend">
		SELECT
		<include refid="columns" />
		<![CDATA[
		FROM reg_user_recommend 
		WHERE 1 = 1
			AND id = #{id}
		]]>
	</select>
	<!-- 根据ID查询 -->
	<select id="findRegUserRecommendByRegUserId" resultMap="_RegUserRecommend">
		SELECT
		<include refid="columns" />
		<![CDATA[
		FROM reg_user_recommend 
		WHERE 1 = 1
			AND reg_user_id = #{regUserId}
		]]>
	</select>
	<!-- 查询条件 -->
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			1 = 1
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="regUserId != null">
				AND reg_user_id = #{regUserId}
			</if>
			<if test="recommendUserid != null">
				AND recommend_userid = #{recommendUserid}
			</if>
			<if test="twoRecommendUserid != null">
				AND two_recommend_userid = #{twoRecommendUserid}
			</if>
			<if test="investTimeBegin != null">
				AND invest_time >= #{investTimeBegin}
			</if>
			<if test="investTimeEnd != null">
				AND invest_time &lt;= #{investTimeEnd}
			</if>
			<if test="state != null">
				AND state = #{state}
			</if>
			<if test="createTimeBegin != null">
				AND create_time >= #{createTimeBegin}
			</if>
			<if test="createTimeEnd != null">
				AND create_time &lt;= #{createTimeEnd}
			</if>
			<if test="modifyTimeBegin != null">
				AND modify_time >= #{modifyTimeBegin}
			</if>
			<if test="modifyTimeEnd != null">
				AND modify_time &lt;= #{modifyTimeEnd}
			</if>
		</where>
	</sql>

	<!-- 查询数量 -->
	<select id="findPage_count" resultType="long">
		SELECT COUNT(ID) FROM reg_user_recommend
		<include refid="findPage_where" />
	</select>

	<!-- 查询分页 -->
	<select id="findPage" resultMap="_RegUserRecommend">
		SELECT
		<include refid="columns" />
		FROM reg_user_recommend
		<include refid="findPage_where" />
		<if test="sortColumns != null and sortColumns !=''">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="getByRegUserId" resultMap="_RegUserRecommend" parameterType="java.lang.Integer">
		SELECT
		<include refid="columns" />
		<![CDATA[
		FROM reg_user_recommend 
		WHERE reg_user_id = #{regUserId}
		]]>
	</select>
</mapper>
