<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:auth="http://www.hongkunjinfu.com/schema/auth"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.hongkunjinfu.com/schema/auth http://www.hongkunjinfu.com/schema/auth/auth-control.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
       ">


    <!-- 启用注解 -->
    <context:annotation-config/>
    <!-- 添加aop支持 -->
    <context:component-scan base-package="com.hongkun.finance.user.support.security.aop"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <!--导入dubbo模块-->
    <import resource="classpath:spring/applicationContext-dubbo.xml"/>
    <!--导入验证模块-->
    <import resource="classpath:spring/springmvc-validator.xml"/>
    <!--     <import resource="classpath:applicationContext-redis.xml"/> -->
    <import resource="classpath:spring/applicationContext-jms.xml"/>

    <!--开启验证-->
    <mvc:annotation-driven validator="validator"/>

    <!-- dubbo扫描包 -->
    <dubbo:annotation package="com.hongkun.finance.web.controller,com.hongkun.finance.web.support,com.hongkun.finance.*.security"/>

    <!-- 扫描注解包路径，多个包用逗号分隔，不填pacakge表示扫描当前ApplicationContext中所有的类 -->
    <context:component-scan base-package="com.hongkun.finance.web.*"/>

    <!-- applicationContext工具类 -->
    <bean id="applicationContextUtils" class="com.yirun.framework.core.utils.ApplicationContextUtils"
          lazy-init="false"/>


    <!--添加参数校验错误的切面/异常处理 位于parent中-->
    <context:component-scan base-package="com.yirun.framework.web" use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>


    <context:property-placeholder location="classpath*:*.properties" ignore-unresolvable="true" order="1"
                                  file-encoding="UTF-8"/>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <description>启动Spring MVC的注解功能，完成请求和注解POJO的映射</description>
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <description>避免IE执行AJAX时,返回JSON出现下载文件</description>
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!--配置freeMarker视图解析器 -->
    <bean id="viewResolverFtl" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="contentType" value="text/html;?charset=UTF-8"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="requestContextAttribute" value="request"/>
        <property name="cache" value="true"/>
        <property name="suffix" value=".ftl"/>
        <property name="order" value="0"/>
    </bean>

    <!--配置freeMarker的模板路径 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/t/"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="datetime_format">yyyy-MM-ddHH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">#.##</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="tag_syntax">auto_detect</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
            </props>
        </property>
    </bean>
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

    <!--配置JSP视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/j/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1"/>
    </bean>
    <!-- 在JSP和Freemarker的配置项中都有一个order property，上面例子是把freemarker的order设置为0，jsp为1。 意思是找view时，先找ftl文件，再找jsp文件做为视图。 -->
    <!-- 支持上传文件 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 100M -->
        <property name="maxUploadSize" value="104857600"></property>
        <property name="defaultEncoding" value="utf-8"></property>
    </bean>
    <!--静态资源放行-->
    <mvc:default-servlet-handler/>

    <!--开启权限控制-->
    <auth:enableControl/>

    <mvc:interceptors>
        <!-- 必须放在第一位,原因见AddResponseInterceptor文件-->
        <mvc:interceptor>
            <mvc:mapping path="/**/*.htm"/>
            <bean class="com.hongkun.finance.user.support.security.interceptor.AddResponseInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>